{"remainingRequest":"C:\\Users\\Administrator\\yh\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Administrator\\yh\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\Administrator\\yh\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Administrator\\yh\\src\\views\\permission-manage\\permission-list.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Administrator\\yh\\src\\views\\permission-manage\\permission-list.vue","mtime":1563456966202},{"path":"C:\\Users\\Administrator\\yh\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Administrator\\yh\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\Administrator\\yh\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Administrator\\yh\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireDefault = require(\"C:\\\\Users\\\\Administrator\\\\yh\\\\node_modules\\\\@babel\\\\runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nrequire(\"core-js/modules/es7.symbol.async-iterator\");\n\nrequire(\"core-js/modules/es6.symbol\");\n\nrequire(\"core-js/modules/web.dom.iterable\");\n\nrequire(\"regenerator-runtime/runtime\");\n\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"C:\\\\Users\\\\Administrator\\\\yh\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/asyncToGenerator\"));\n\nvar _permissionManage = require(\"@/api/permission-manage\");\n\nvar _Pagination = _interopRequireDefault(require(\"@/components/Pagination\"));\n\nvar _waves = _interopRequireDefault(require(\"@/directive/waves\"));\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n// secondary package based on el-pagination\n// waves directive\nvar _default = {\n  name: 'ComplexTable',\n  components: {\n    Pagination: _Pagination.default\n  },\n  directives: {\n    waves: _waves.default\n  },\n  filters: {\n    statusFilter: function statusFilter(status) {\n      var statusMap = {\n        published: 'success',\n        draft: 'info',\n        deleted: 'danger'\n      };\n      return statusMap[status];\n    },\n    typeFilter: function typeFilter(type) {\n      return calendarTypeKeyValue[type];\n    }\n  },\n  data: function data() {\n    return {\n      tableKey: 0,\n      list: null,\n      total: 0,\n      listLoading: true,\n      listQuery: {\n        page: 1,\n        limit: 10,\n        // importance: undefined,\n        _kw: undefined,\n        // type: undefined,\n        _t: 'name'\n      },\n      importanceOptions: [1, 2, 3],\n      sortOptions: [{\n        label: '权限',\n        key: 'name'\n      }, {\n        label: '名称',\n        key: 'display_name'\n      }],\n      statusOptions: ['published', 'draft', 'deleted'],\n      showReviewer: false,\n      temp: {\n        name: '',\n        display_name: '',\n        description: ''\n      },\n      dialogFormVisible: false,\n      dialogStatus: '',\n      textMap: {\n        update: '编辑',\n        create: '新增'\n      },\n      dialogPvVisible: false,\n      pvData: [],\n      rules: {\n        name: [{\n          required: true,\n          message: '权限必填',\n          trigger: 'blur'\n        }],\n        display_name: [{\n          required: true,\n          message: '权限名称必填',\n          trigger: 'blur'\n        }],\n        description: [{\n          required: true,\n          message: '权限描述必填',\n          trigger: 'blur'\n        }]\n      },\n      downloadLoading: false\n    };\n  },\n  created: function created() {\n    this.getList();\n  },\n  methods: {\n    getList: function getList() {\n      var _this = this;\n\n      this.listLoading = true;\n      (0, _permissionManage.permissionList)(this.listQuery).then(function (response) {\n        _this.list = response.data.data;\n        _this.total = response.data.total; // Just to simulate the time of the request\n\n        setTimeout(function () {\n          _this.listLoading = false;\n        }, 1.5 * 1000);\n      });\n    },\n    handleFilter: function handleFilter() {\n      this.listQuery.page = 1;\n      this.getList();\n    },\n    handleModifyStatus: function handleModifyStatus(_ref) {\n      var _this2 = this;\n\n      var $index = _ref.$index,\n          row = _ref.row;\n      this.$confirm('确定删除此权限吗?', '删除提示', {\n        confirmButtonText: '确认',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(\n      /*#__PURE__*/\n      (0, _asyncToGenerator2.default)(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee() {\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return (0, _permissionManage.deletePermission)(row.id);\n\n              case 2:\n                _this2.list.splice($index, 1);\n\n                _this2.$message({\n                  type: 'success',\n                  message: '删除成功!'\n                });\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }))).catch(function (err) {\n        console.error(err);\n      });\n    },\n    sortChange: function sortChange(data) {\n      var prop = data.prop,\n          order = data.order;\n\n      if (prop === 'id') {\n        this.sortByID(order);\n      }\n    },\n    sortByID: function sortByID(order) {\n      if (order === 'ascending') {\n        this.listQuery.sort = '+id';\n      } else {\n        this.listQuery.sort = '-id';\n      }\n\n      this.handleFilter();\n    },\n    resetTemp: function resetTemp() {\n      this.temp = {\n        name: '',\n        display_name: '',\n        description: ''\n      };\n    },\n    handleCreate: function handleCreate() {\n      var _this3 = this;\n\n      this.resetTemp();\n      this.dialogStatus = 'create';\n      this.dialogFormVisible = true;\n      this.$nextTick(function () {\n        _this3.$refs['dataForm'].clearValidate();\n      });\n    },\n    createData: function createData() {\n      var _this4 = this;\n\n      this.$refs['dataForm'].validate(function (valid) {\n        if (valid) {\n          (0, _permissionManage.createPermission)(_this4.temp).then(function (response) {\n            _this4.temp.id = response.data.id;\n            var str = response.data.created_at.date;\n            var s1 = str.substring(0, str.length - 7);\n            _this4.temp.created_at = s1;\n\n            _this4.list.unshift(_this4.temp);\n\n            _this4.dialogFormVisible = false;\n\n            _this4.$notify({\n              title: '权限',\n              message: '增加权限成功',\n              type: 'success',\n              duration: 2000\n            });\n          });\n        }\n      });\n    },\n    handleUpdate: function handleUpdate(scope) {\n      var _this5 = this;\n\n      this.temp = Object.assign({}, scope.row); // copy obj\n      // this.temp.timestamp = new Date(this.temp.timestamp)\n\n      this.dialogStatus = 'update';\n      this.dialogFormVisible = true;\n      this.$nextTick(function () {\n        _this5.$refs['dataForm'].clearValidate();\n      });\n    },\n    updateData: function updateData() {\n      var _this6 = this;\n\n      this.$refs['dataForm'].validate(function (valid) {\n        if (valid) {\n          var tempData = Object.assign({}, _this6.temp);\n\n          _this6.$delete(tempData, 'created_at');\n\n          (0, _permissionManage.updatePermission)(tempData).then(function () {\n            var _iteratorNormalCompletion = true;\n            var _didIteratorError = false;\n            var _iteratorError = undefined;\n\n            try {\n              for (var _iterator = _this6.list[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n                var v = _step.value;\n\n                if (v.id === _this6.temp.id) {\n                  var index = _this6.list.indexOf(v);\n\n                  _this6.list.splice(index, 1, _this6.temp);\n\n                  break;\n                }\n              }\n            } catch (err) {\n              _didIteratorError = true;\n              _iteratorError = err;\n            } finally {\n              try {\n                if (!_iteratorNormalCompletion && _iterator.return != null) {\n                  _iterator.return();\n                }\n              } finally {\n                if (_didIteratorError) {\n                  throw _iteratorError;\n                }\n              }\n            }\n\n            _this6.dialogFormVisible = false;\n\n            _this6.$notify({\n              title: '权限',\n              message: '编辑权限成功',\n              type: 'success',\n              duration: 2000\n            });\n          });\n        }\n      });\n    },\n    handleDelete: function handleDelete(row) {\n      this.$notify({\n        title: 'Success',\n        message: 'Delete Successfully',\n        type: 'success',\n        duration: 2000\n      });\n      var index = this.list.indexOf(row);\n      this.list.splice(index, 1);\n    }\n  }\n};\nexports.default = _default;",null]}