{"remainingRequest":"C:\\Users\\Administrator\\yuanhang\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Administrator\\yuanhang\\src\\views\\permission-manage\\admin-list.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Administrator\\yuanhang\\src\\views\\permission-manage\\admin-list.vue","mtime":1563553826948},{"path":"C:\\Users\\Administrator\\yuanhang\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Administrator\\yuanhang\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\Administrator\\yuanhang\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Administrator\\yuanhang\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport {\n  deleteAdmin,\n  checkedRole,\n  updateAdmin,\n  createAdmim,\n  getRolelist,\n  adminList,\n  permissionList,\n  createPermission,\n  updatePermission,\n  deletePermission\n} from '@/api/permission-manage'\nimport Pagination from '@/components/Pagination' // secondary package based on el-pagination\nimport waves from '@/directive/waves' // waves directive\n\nexport default {\n  name: 'ComplexTable',\n  components: { Pagination },\n  directives: { waves },\n  filters: {\n    statusFilter(status) {\n      const statusMap = {\n        published: 'success',\n        draft: 'info',\n        deleted: 'danger'\n      }\n      return statusMap[status]\n    },\n    typeFilter(type) {\n      return calendarTypeKeyValue[type]\n    }\n  },\n  data() {\n    return {\n      tableKey: 0,\n      list: null,\n      total: 0,\n      listLoading: true,\n      checkList: [],\n      checked: [],\n      listQuery: {\n        page: 1,\n        limit: 10,\n        // importance: undefined,\n        _kw: undefined,\n        // type: undefined,\n        _t: 'name'\n      },\n      importanceOptions: [1, 2, 3],\n\n      sortOptions: [{ label: '用户名', key: 'name' }, { label: '邮箱', key: 'email' }],\n      statusOptions: ['published', 'draft', 'deleted'],\n      showReviewer: false,\n      temp: {\n        name: '',\n        hint: '请输入密码'\n\n      },\n      dialogFormVisible: false,\n      dialogStatus: '',\n      textMap: {\n        update: '编辑',\n        create: '新增'\n      },\n      dialogPvVisible: false,\n      pvData: [],\n      rules: {\n        name: [{ required: true, message: '用户名必填', trigger: 'blur' }],\n        password: [{ required: true, message: '密码必填', trigger: 'blur' }],\n        email: [{ required: true, message: '邮箱必填', trigger: 'blur' }]\n        // description: [{ required: true, message: '权限描述必填', trigger: 'blur' }]\n      },\n      downloadLoading: false\n    }\n  },\n  created() {\n    this.getList()\n    this.roleList()\n  },\n  methods: {\n    test() {\n      console.log(this.checked)\n      this.temp.role_id = this.checked\n    },\n    async roleList() {\n      const res = await getRolelist()\n      this.checkList = res.data\n    },\n    getList() {\n      this.listLoading = true\n      adminList(this.listQuery).then(response => {\n        this.list = response.data.data\n        this.total = response.data.total\n\n        // Just to simulate the time of the request\n        setTimeout(() => {\n          this.listLoading = false\n        }, 1.5 * 1000)\n      })\n    },\n    handleFilter() {\n      this.listQuery.page = 1\n      this.getList()\n    },\n    handleModifyStatus({ $index, row }) {\n\n      this.$confirm('确定删除此管理员吗?', '删除提示', {\n        confirmButtonText: '确认',\n        cancelButtonText: '取消',\n        type: 'warning'\n      })\n        .then(async() => {\n          await deleteAdmin(row.id)\n          this.list.splice($index, 1)\n          this.$message({\n            type: 'success',\n            message: '删除成功!'\n          })\n        })\n        .catch(err => {\n          console.error(err)\n        })\n    },\n    sortChange(data) {\n      const { prop, order } = data\n      if (prop === 'id') {\n        this.sortByID(order)\n      }\n    },\n    sortByID(order) {\n      if (order === 'ascending') {\n        this.listQuery.sort = '+id'\n      } else {\n        this.listQuery.sort = '-id'\n      }\n      this.handleFilter()\n    },\n    resetTemp() {\n      this.checked = [],\n        this.temp = {\n          name: '',\n          hint: '请输入密码',\n          mima: 'password'\n        }\n    },\n    handleCreate() {\n      this.resetTemp()\n      this.dialogStatus = 'create'\n      this.dialogFormVisible = true\n      this.$nextTick(() => {\n        this.$refs['dataForm'].clearValidate()\n      })\n    },\n    createData() {\n      this.$delete(this.temp,'mima')\n      this.$delete(this.temp,'hint')\n      this.$refs['dataForm'].validate((valid) => {\n        if (valid) {\n          createAdmim(this.temp).then(response => {\n            this.temp.id = response.data.id\n            this.temp.roles_name = response.data.roles_name\n            this.$delete(this.temp,'password')\n            this.temp.hint = '不填写为不修改密码'\n            var str = response.data.created_at.date\n            var s1 = str.substring(0, str.length - 7)\n            this.temp.created_at = s1\n            this.list.unshift(this.temp)\n            this.dialogFormVisible = false\n            this.$notify({\n              title: '权限',\n              message: '增加权限成功',\n              type: 'success',\n              duration: 2000\n            })\n          })\n        }\n      })\n    },\n    handleUpdate(scope) {\n\n      this.temp = Object.assign({}, scope.row) // copy obj\n      console.log(JSON.stringify(this.temp))\n      this.temp.hint = '不填写为不修改密码'\n      // this.temp.timestamp = new Date(this.temp.timestamp)\n      checkedRole(scope.row.id).then(response => {\n        this.checked = response.data\n        this.temp.role_id = this.checked\n      })\n\n      console.log(JSON.stringify(this.temp))\n      this.dialogStatus = 'update'\n      this.dialogFormVisible = true\n      this.$nextTick(() => {\n        this.$refs['dataForm'].clearValidate()\n      })\n    },\n    updateData() {\n      this.$refs['dataForm'].validate((valid) => {\n        if (valid) {\n          this.temp.hint = '不填写为不修改密码'\n          const tempData = Object.assign({}, this.temp)\n          this.$delete(tempData, 'created_at')\n          this.$delete(tempData, 'hint')\n          this.$delete(tempData, 'roles_name')\n          updateAdmin(tempData).then(() => {\n            for (const v of this.list) {\n              if (v.id === this.temp.id) {\n                const index = this.list.indexOf(v)\n                this.list.splice(index, 1, this.temp)\n                break\n              }\n            }\n            this.dialogFormVisible = false\n            this.$notify({\n              title: '权限',\n              message: '编辑权限成功',\n              type: 'success',\n              duration: 2000\n            })\n          })\n        }\n      })\n    },\n    handleDelete(row) {\n      this.$notify({\n        title: 'Success',\n        message: 'Delete Successfully',\n        type: 'success',\n        duration: 2000\n      })\n      const index = this.list.indexOf(row)\n      this.list.splice(index, 1)\n    }\n  }\n}\n",null]}